"""Add clean subscription system

Revision ID: c3ebe11d3eae
Revises: 7328bcefd75a
Create Date: 2025-05-31 10:18:09.449063

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import fastapi_users_db_sqlalchemy


# revision identifiers, used by Alembic.
revision: str = 'c3ebe11d3eae'
down_revision: Union[str, None] = '7328bcefd75a'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('subscription_plans',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('tier', sa.Enum('FREE', 'PREMIUM', 'PRO', name='subscriptiontier'), nullable=False),
    sa.Column('price_monthly', sa.Float(), nullable=False),
    sa.Column('price_yearly', sa.Float(), nullable=False),
    sa.Column('cv_analyses_per_month', sa.Integer(), nullable=True),
    sa.Column('job_analyses_per_month', sa.Integer(), nullable=True),
    sa.Column('cv_storage_limit', sa.Integer(), nullable=True),
    sa.Column('advanced_analytics', sa.Boolean(), nullable=False),
    sa.Column('priority_support', sa.Boolean(), nullable=False),
    sa.Column('custom_templates', sa.Boolean(), nullable=False),
    sa.Column('api_access', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_subscription_plans_id'), 'subscription_plans', ['id'], unique=False)
    op.create_table('usage_tracking',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', fastapi_users_db_sqlalchemy.generics.GUID(), nullable=False),
    sa.Column('cv_analyses_count', sa.Integer(), nullable=False),
    sa.Column('job_analyses_count', sa.Integer(), nullable=False),
    sa.Column('cv_downloads_count', sa.Integer(), nullable=False),
    sa.Column('tracking_month', sa.Integer(), nullable=False),
    sa.Column('tracking_year', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_usage_tracking_id'), 'usage_tracking', ['id'], unique=False)
    op.create_table('user_subscriptions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', fastapi_users_db_sqlalchemy.generics.GUID(), nullable=False),
    sa.Column('plan_id', sa.Integer(), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('auto_renewal', sa.Boolean(), nullable=False),
    sa.Column('stripe_subscription_id', sa.String(length=255), nullable=True),
    sa.Column('last_payment_date', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['plan_id'], ['subscription_plans.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_subscriptions_id'), 'user_subscriptions', ['id'], unique=False)
    op.create_table('cv_analysis_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', fastapi_users_db_sqlalchemy.generics.GUID(), nullable=False),
    sa.Column('cv_id', sa.Integer(), nullable=True),
    sa.Column('analysis_type', sa.Enum('CV_WEAKNESS', 'JOB_MATCHING', 'CV_OPTIMIZATION', name='analysistype'), nullable=False),
    sa.Column('analysis_version', sa.String(length=50), nullable=False),
    sa.Column('weaknesses', sa.JSON(), nullable=True),
    sa.Column('recommendations', sa.JSON(), nullable=True),
    sa.Column('section_completeness', sa.JSON(), nullable=True),
    sa.Column('job_description_hash', sa.String(length=64), nullable=True),
    sa.Column('skill_matches', sa.JSON(), nullable=True),
    sa.Column('missing_skills', sa.JSON(), nullable=True),
    sa.Column('experience_analysis', sa.JSON(), nullable=True),
    sa.Column('overall_grade', sa.JSON(), nullable=True),
    sa.Column('recommended_courses', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['cv_id'], ['cvs.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_cv_analysis_history_id'), 'cv_analysis_history', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_cv_analysis_history_id'), table_name='cv_analysis_history')
    op.drop_table('cv_analysis_history')
    op.drop_index(op.f('ix_user_subscriptions_id'), table_name='user_subscriptions')
    op.drop_table('user_subscriptions')
    op.drop_index(op.f('ix_usage_tracking_id'), table_name='usage_tracking')
    op.drop_table('usage_tracking')
    op.drop_index(op.f('ix_subscription_plans_id'), table_name='subscription_plans')
    op.drop_table('subscription_plans')
    # ### end Alembic commands ###
